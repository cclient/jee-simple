<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
    <!-- 加载controller的时候,不加载service,因为此时事物并未生效,若此时加载了service,那么事物无法对service进行拦截 -->
    <!--<context:component-scan base-package="my.controller">-->
        <!--<context:exclude-filter type="annotation"-->
                                <!--expression="org.springframework.stereotype.Service"/>-->
    <!--</context:component-scan>-->


    <!--<context:component-scan base-package="my.entity">-->
    <!--</context:component-scan>-->

    <!--<bean id="AccountMybatisMapperDao" class="my.dao.AccountMybatisMapperDao">-->
    <!--<constructor-arg ref="sqlSessionTemplate"/>-->
    <!--</bean>-->

    <!--<context:component-scan base-package="my.dao">-->
        <!--<context:exclude-filter expression="my.idao.IShopDao" type="assignable"></context:exclude-filter>-->
    <!--</context:component-scan>-->




    <!--<bean id="AccountJDBCDao" class="my.dao.AccountJDBCDao"></bean>-->
    <!--<bean id="AccountJDBCTemplateDao" class="my.dao.AccountJDBCTemplateDao"></bean>-->
    <!--<bean id="AccountJDBCNamedTemplateDao" class="my.dao.AccountJDBCNamedTemplateDao"></bean>-->

    <!--<bean id="AccountHibernateDao" class="my.dao.AccountHibernateDao"></bean>-->
    <!--<bean id="AccountHibernateTxDao" class="my.dao.AccountHibernateTxDao"></bean>-->
    <!--<bean id="AccountMybatisDao" class="my.dao.AccountMybatisDao"></bean>-->
    <!--<bean id="AccountMybatisTemplateDao" class="my.dao.AccountMybatisTemplateDao"></bean>-->

    <!--<bean id="AccountMybatisMapperIocDao" class="my.dao.AccountMybatisMapperIocDao"></bean>-->


    <!--<bean id="demoDao" class="my.first.DemoDao"></bean>-->
    <!-- 	<context:component-scan base-package="com.buss.*">
            <context:exclude-filter type="annotation"
                expression="org.springframework.stereotype.Service" />
        </context:component-scan>
     -->

    <!-- ，Spring容器会在加载完Spring容器后把上下文对象调用这个对象中的setApplicationContext方法 SpringContextHelper调用getBean()方法得到Spring容器中的对象了 -->
    <!-- ApplicationContext -->
    <!-- <bean class="org.jeecgframework.core.util.ApplicationContextUtil"></bean> -->

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/html;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 &ndash;&gt;-->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="cacheSeconds" value="0"/>-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter"/>&lt;!&ndash; json转换器 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 自定义格式转换 替换spring默认 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="webBindingInitializer"> <bean class="org.jeecgframework.core.interceptors.MyWebBinding" &ndash;&gt;-->
        <!--&lt;!&ndash;/> </property>&ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash; 组件针对文件上传操作根据需求，注入其属性 文件太大，只能后台出log 前台直接没有反应了 &ndash;&gt;-->
    <!--<bean id="multipartResolver"-->
          <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver"-->
          <!--p:defaultEncoding="UTF-8">-->
        <!--<property name="maxUploadSize">-->
            <!--<value>104857600</value>-->
        <!--</property>-->
        <!--<property name="maxInMemorySize">-->
            <!--<value>4096</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;&lt;!&ndash; Bean解析器,级别高于默认解析器,寻找bean对象进行二次处理 order的值越小优先级越高 BeanNameViewResolver&ndash;&gt;-->
    <!--&lt;!&ndash;不会进行视图缓存 &ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="beanNameViewResolver"&ndash;&gt;-->
    <!--&lt;!&ndash;class="org.springframework.web.servlet.view.BeanNameViewResolver"&ndash;&gt;-->
    <!--&lt;!&ndash;p:order="0">&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--&lt;!&ndash;&lt;!&ndash; 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- &ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="defaultViewResolver"&ndash;&gt;-->
    <!--&lt;!&ndash;class="org.springframework.web.servlet.view.InternalResourceViewResolver"&ndash;&gt;-->
    <!--&lt;!&ndash;p:order="3">&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="viewClass"&ndash;&gt;-->
    <!--&lt;!&ndash;value="org.springframework.web.servlet.view.JstlView"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="contentType" value="text/html"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="prefix" value="/webpage/"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="suffix" value=".jsp"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="order" value="0"/>-->
        <!--&lt;!&ndash;<property name=""&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="favorParameter" value="false"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="ignoreAcceptHeader" value="true"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="defaultContentType" value="text/html"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="mediaTypes">&ndash;&gt;-->
        <!--&lt;!&ndash;<map>&ndash;&gt;-->
        <!--&lt;!&ndash;<entry key="json" value="application/json"/>&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;<entry key="xml" value="application/xml"/>&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;</map>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--<property name="viewResolvers">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>-->
                <!--<bean-->
                        <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
                    <!--<property name="viewClass"-->
                              <!--value="org.springframework.web.servlet.view.JstlView"/>-->
                    <!--<property name="contentType" value="text/html"/>-->
                    <!--<property name="prefix" value="/webpage/"/>-->
                    <!--<property name="suffix" value=".jsp"/>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--&lt;!&ndash;<bean id="jsonView"&ndash;&gt;-->
                <!--&lt;!&ndash;class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>&ndash;&gt;-->
                <!--<bean id="jsonView"-->
                      <!--class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
                <!--&lt;!&ndash;<bean id="xmlView"&ndash;&gt;-->
                <!--&lt;!&ndash;class="org.springframework.web.servlet.view.xml.MarshallingView">&ndash;&gt;-->
                <!--&lt;!&ndash;<constructor-arg>&ndash;&gt;-->
                <!--&lt;!&ndash;<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">&ndash;&gt;-->
                <!--&lt;!&ndash;<property name="classesToBeBound">&ndash;&gt;-->
                <!--&lt;!&ndash;<list>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.cnblogs.yjmyzz.dto.UserInfo</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.cnblogs.yjmyzz.dto.ListBean</value>&ndash;&gt;-->
                <!--&lt;!&ndash;</list>&ndash;&gt;-->
                <!--&lt;!&ndash;</property>&ndash;&gt;-->
                <!--&lt;!&ndash;</bean>&ndash;&gt;-->
                <!--&lt;!&ndash;</constructor-arg>&ndash;&gt;-->
                <!--&lt;!&ndash;</bean>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash; Excel 处理 根据用户输入进行对象处理 &ndash;&gt;-->
    <!--&lt;!&ndash; <bean id="jeecgExcelView" class="org.jeecgframework.poi.excel.view.JeecgSingleExcelView"-->
        <!--/> &ndash;&gt;-->
    <!--&lt;!&ndash; 方言 &ndash;&gt;-->
    <!--&lt;!&ndash; <bean id="dialect" class="org.jeecgframework.core.common.hibernate.dialect.DialectFactoryBean">-->
        <!--<property name="dbType" value="${jdbc.dbType}" /> </bean> &ndash;&gt;-->
    <!--&lt;!&ndash; 异常处理类 cdp spring 自动用这个异常处理类替换原来的 id 完全多余 &ndash;&gt;-->
    <!--&lt;!&ndash; <bean id="exceptionHandler" class="org.jeecgframework.core.common.exception.MyExceptionHandler"-->
        <!--/> &ndash;&gt;-->
    <!--&lt;!&ndash; 系统错误转发配置[并记录错误日志] &ndash;&gt;-->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="defaultErrorView" value="500"></property>   &lt;!&ndash; 默认为500，系统错误(error.jsp) &ndash;&gt;-->
        <!--<property name="defaultStatusCode" value="404"></property>-->
        <!--<property name="statusCodes">&lt;!&ndash; 配置多个statusCode &ndash;&gt;-->
            <!--<props>-->
                <!--<prop key="error">500</prop>  &lt;!&ndash; error.jsp &ndash;&gt;-->
                <!--<prop key="error1">404</prop>    &lt;!&ndash; error1.jsp &ndash;&gt;-->
            <!--</props>-->
        <!--</property>-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--&lt;!&ndash; 这里你可以根据需要定义N多个错误异常转发 &ndash;&gt;-->
                <!--<prop key="java.sql.SQLException">dbError</prop> &lt;!&ndash; 数据库错误(dbError.jsp) &ndash;&gt;-->
                <!--<prop key="org.springframework.web.bind.ServletRequestBindingException">bizError-->
                <!--</prop> &lt;!&ndash; 参数绑定错误(如：必须参数没传递)(bizError.jsp) &ndash;&gt;-->
                <!--<prop key="java.lang.IllegalArgumentException">bizError</prop>  &lt;!&ndash; 参数错误(bizError.jsp) &ndash;&gt;-->
                <!--<prop key="org.springframework.validation.BindException">bizError</prop>  &lt;!&ndash; 参数类型有误(bizError.jsp) &ndash;&gt;-->
                <!--<prop key="java.lang.Exception">unknowError</prop>  &lt;!&ndash; 其他错误为'未定义错误'(unknowError.jsp) &ndash;&gt;-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<aop:aspectj-autoproxy/>-->
    <!-- <context:component-scan base-package="org.jeecgframework.core.interceptors"
        /> 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 <context:component-scan
        base-package="org.jeecgframework.core.aop" /> -->
</beans>